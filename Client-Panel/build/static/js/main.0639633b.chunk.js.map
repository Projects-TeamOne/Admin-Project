{"version":3,"sources":["components/layout/spinner.gif","components/layout/Spinner.js","helpers/auth.js","reducers/notifyReducer.js","store.js","actions/types.js","reducers/settingsReducer.js","components/layout/AppNavbar.js","components/clients/Clients.js","components/layout/Sidebar.js","components/layout/Dashboard.js","components/clients/AddClient.js","components/clients/ClientDetails.js","components/clients/EditClient.js","actions/notifyActions.js","components/layout/Alert.js","components/auth/Login.js","components/auth/Register.js","components/settings/Settings.js","actions/settingsActions.js","App.js","index.js"],"names":["module","exports","Spinner","src","spinner","alt","style","width","margin","display","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","LoadingScreen","allowRedirectBack","redirectPath","state","ownProps","getRedirectQueryParam","authenticatingSelector","firebase","auth","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","initialState","message","messageType","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","createStoreWithFirebase","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","rootReducer","combineReducers","firebaseReducer","firestore","firestoreReducer","notify","action","type","settings","disableBalanceOnAdd","payload","disableBalanceOnEdit","allowRegistration","localStorage","getItem","setItem","JSON","stringify","store","parse","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","f","AppNavbar","isAuthenticated","onLogoutClick","logout","preventDefault","props","this","className","to","data-toggle","data-target","id","href","email","onClick","uid","Component","firebaseConnect","connect","Clients","totalOwed","clients","x","screen","parseFloat","toFixed","classames","map","client","key","firstName","lastName","balance","reduce","total","toString","firestoreConnect","collection","ordered","Sidebar","AddClient","phone","onChange","e","setState","target","name","value","onSubmit","newClient","history","add","then","push","htmlFor","minLength","required","autoFocus","disabled","propType","PropTypes","object","isRequired","porps","ClientDetails","showBalanceUpdate","balanceUpdateAmount","balanceSubmit","clientUpdate","update","doc","console","log","Delete","delete","balanceForm","step","min","placeholder","classnames","cursor","storeAs","match","params","count","EditClient","initState","updateClient","defaultValue","notifyUser","Alert","Login","password","login","catch","err","Register","confpass","createUser","Settings","disableBalanceOnAddChange","setDisableBalanceOnAdd","disableBalanceOnEditChange","setDisableBalanceOnEdit","allowRegistrationChange","setAllowRegistration","checked","App","exact","path","component","Dashboard","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0639633b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.2c9683e0.gif\";","import React from 'react';\r\nimport spinner from \"./spinner.gif\";\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div>\r\n            <img \r\n            src={spinner} \r\n            alt=\"Loading...\" \r\n            style={{ width: \"350px\", margin: \"auto\", display: \"block\" }} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\r\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect'\r\n// import createHistory from 'history/createBrowserHistory'\r\nimport LoadingScreen from '../components/layout/Spinner.js'; // change it to your custom component\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n// const browserHistory = createHistory()\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n  wrapperDisplayName: 'UserIsAuthenticated',\r\n  AuthenticatingComponent: LoadingScreen,\r\n  allowRedirectBack: true,\r\n  redirectPath: (state, ownProps) =>\r\n    locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n  authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n    !auth.isLoaded || isInitializing === true,\r\n  authenticatedSelector: ({ firebase: { auth } }) =>\r\n    auth.isLoaded && !auth.isEmpty\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    AuthenticatingComponent: LoadingScreen,\r\n    allowRedirectBack: false,\r\n    redirectPath: (state, ownProps) =>\r\n      locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n      !auth.isLoaded || isInitializing === true,\r\n    authenticatedSelector: ({ firebase: { auth } }) =>\r\n      auth.isLoaded && auth.isEmpty\r\n  });","import { NOTIFY_USER } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    message: null,\r\n    messageType: null\r\n}\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case NOTIFY_USER:\r\n            return {\r\n                ...state,\r\n                message: action.message,\r\n                messageType: action.messageType\r\n            }\r\n            default:\r\n                return state;\r\n    }\r\n}","import { createStore, combineReducers, compose } from \"redux\";\r\nimport firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\r\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\";\r\n// Reducers\r\nimport notifyReducer from \"./reducers/notifyReducer.js\"\r\nimport settingReducer from \"./reducers/settingsReducer.js\"\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBrm-CX-Qe4netBCY4EzhvRiykCzvHwLQ0\",\r\n    authDomain: \"client-panel-24102000.firebaseapp.com\",\r\n    databaseURL: \"https://client-panel-24102000.firebaseio.com\",\r\n    projectId: \"client-panel-24102000\",\r\n    storageBucket: \"client-panel-24102000.appspot.com\",\r\n    messagingSenderId: \"170720546841\",\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true //Firestore for Profile instead of Realtime DB\r\n}\r\n\r\n// Init firebase instance\r\nfirebase.initializeApp(firebaseConfig);\r\n// Init firestore \r\n// const firestore = firebase.firestore();\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n    reactReduxFirebase(firebase, rrfConfig),\r\n    reduxFirestore(firebase) // <- needed if using firestore\r\n)(createStore);\r\n\r\n// Add firebase to reducer\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    notify: notifyReducer,\r\n    settings: settingReducer\r\n});\r\n\r\n// Check for settings in local storage\r\nif (localStorage.getItem('settings') === null) {\r\n    // Default settings\r\n    const defaultSettings = {\r\n        disableBalanceOnAdd: true,\r\n        disableBalanceOnEdit: false,\r\n        allowRegistration: true\r\n    }\r\n\r\n    // Set to locastorage\r\n    localStorage.setItem('settings', JSON.stringify(defaultSettings));\r\n}\r\n\r\n// Crate initial state\r\nconst initialState = {settings: JSON.parse(localStorage.getItem('settings'))};\r\n\r\n// Create store with reducers and initial state\r\nconst store = createStoreWithFirebase(rootReducer, initialState, compose(\r\n    reactReduxFirebase(firebase),\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__() : f => f\r\n));\r\n\r\nexport default store;","export const NOTIFY_USER = \"NOTIFY_USER\"\r\nexport const DISABLE_BALANCE_ON_ADD = \"DISABLE_BALANCE_ON_ADD\";\r\nexport const DISABLE_BALANCE_ON_EDIT = \"DISABLE_BALANCE_ON_EDIT\";\r\nexport const ALLOW_REGISTRATION = \"ALLOW_REGISTRATION\";","import { DISABLE_BALANCE_ON_ADD, DISABLE_BALANCE_ON_EDIT, ALLOW_REGISTRATION } from \"../actions/types.js\";\r\n\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case DISABLE_BALANCE_ON_ADD:\r\n            return {\r\n                ...state,\r\n                disableBalanceOnAdd: action.payload\r\n            }\r\n        case DISABLE_BALANCE_ON_EDIT:\r\n            return {\r\n                ...state,\r\n                disableBalanceOnEdit: action.payload\r\n            }\r\n        case ALLOW_REGISTRATION:\r\n            return ( {\r\n                ...state,\r\n                allowRegistration: action.payload\r\n            } )\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\n// import { auth } from 'firebase';\r\n\r\nclass AppNavbar extends Component {\r\n    state = {\r\n        isAuthenticated: false\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { auth } = props;\r\n\r\n        if (auth.uid) {\r\n            return { isAuthenticated: true }\r\n        } else {\r\n            return { isAuthenticated: false }\r\n        }\r\n    }\r\n\r\n    onLogoutClick = (logout) => {\r\n        logout.preventDefault();\r\n\r\n        const { firebase } = this.props;\r\n        firebase.logout()\r\n\r\n    }\r\n\r\n    render() {\r\n        const { isAuthenticated } = this.state;\r\n        const { auth } = this.props;\r\n        const { allowRegistration } = this.props.settings\r\n        return (\r\n            <nav className=\"navbar navbar-expand-md navbar-dark bg-primary mb-4\">\r\n                <div className=\"container\">\r\n                    <Link to=\"/\" className=\"navbar-brand\">\r\n                        Client Panel\r\n                    </Link>\r\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarMain\">\r\n                        <span className=\"navbar-toggler-icon\"></span>\r\n                    </button>\r\n                    <div className=\"collapse navbar-collapse\" id=\"navbarMain\">\r\n                        <ul className=\"navbar-nav mr-auto\">\r\n                            {isAuthenticated ? (\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/\" className=\"nav-link\">\r\n                                        Dashboard\r\n                                </Link>\r\n                                </li>\r\n                            ) : null}\r\n                        </ul>\r\n                        {isAuthenticated ? (\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"#!\" className=\"nav-link\">\r\n                                        {auth.email}\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/settings\" className=\"nav-link\">\r\n                                        Settings\r\n                                </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"#!\" className=\"nav-link\" onClick={this.onLogoutClick}>\r\n                                        Logout\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        ) : null}\r\n\r\n                        {allowRegistration && !isAuthenticated ? (\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/login\" className=\"nav-link\">\r\n                                        Login\r\n                                </Link>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <Link to=\"/register\" className=\"nav-link\">\r\n                                        Register\r\n                                </Link>\r\n                                </li>\r\n                            </ul>\r\n                        ) : null}\r\n                    </div>\r\n                </div>\r\n            </nav>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nAppNavbar.propTypes = {\r\n    firebase: PropTypes.object.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    settings: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firebaseConnect(),\r\n    connect((state, props) => ({\r\n        auth: state.firebase.auth,\r\n        settings: state.settings\r\n    }))\r\n)(AppNavbar);","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport classames from \"classnames\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport Spinner from \"../layout/Spinner.js\";\r\n\r\nclass Clients extends Component {\r\n    state = {\r\n        totalOwed: null\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        const { clients } = props;\r\n\r\n        if (clients) {\r\n            // Add balances\r\n            const total = clients.reduce((total, client) => {\r\n                return total + parseFloat(client.balance.toString())\r\n            }, 0);\r\n            state = {\r\n                totalOwed: total\r\n            }\r\n            return state;\r\n        }\r\n        return null;\r\n    }\r\n    render() {\r\n        const { clients } = this.props;\r\n        const { totalOwed } = this.state;\r\n        const x = window.screen.width;\r\n\r\n        if (clients) {\r\n            return (\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6 col-7 \">\r\n                            <h2><i className=\"fas fa-users\"></i> Clients</h2>\r\n                        </div>\r\n                        <div className=\"col-md-6 text-right\">\r\n                            <h5 className=\"text-right text-secondary\">\r\n                                Total Owed {\" \"}\r\n                                <span className=\"text-primary\">\r\n                                    ${parseFloat(totalOwed).toFixed(2)}\r\n                                </span>\r\n                            </h5>\r\n                        </div>\r\n                    </div>\r\n                    <table className={classames({\r\n                        \"table table-dark table-sm table-hover\": x < 576,\r\n                        \"table table-dark table-hover\": x > 576\r\n                    })}>\r\n                        <thead className=\"thead-inverse\">\r\n                            <tr>\r\n                                <th >Name</th>\r\n                                <th >Email</th>\r\n                                <th >Balance</th>\r\n                                <th />\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {clients.map(client => (\r\n                                <tr key={client.id}>\r\n                                    <td>{client.firstName} {client.lastName}</td>\r\n                                    <td>{client.email}</td>\r\n                                    <td><span >${parseFloat(client.balance).toFixed(2)}</span></td>\r\n                                    <td>\r\n                                        <Link to={`/client/${client.id}`} className=\"btn text-baby-blue btn-sm\">\r\n                                            <i className=\"fas fa-sm fa-arrow-circle-right\"></i> Details\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nClients.propTypes = {\r\n    firestore: PropTypes.object.isRequired,\r\n    clients: PropTypes.array\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect([{ collection: \"clients\" }]),\r\n    connect((state, props) => ({\r\n        clients: state.firestore.ordered.clients\r\n    }))\r\n)(Clients);","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Sidebar = () => {\r\n    return (\r\n       <Link to=\"/client/add\" className=\"btn btn-block btn-grad\">\r\n           <i className=\"fas fa-plus\" /> New\r\n       </Link>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from \"react\";\r\nimport Clients from \"../clients/Clients.js\";\r\nimport Sidebar from \"./Sidebar.js\";\r\n\r\nexport default () => {\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-md-10 col-10\">\r\n                <Clients />\r\n            </div>\r\n            <div className=\"col-md-2 col-10\">\r\n                <Sidebar />\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\n\r\nclass AddClient extends Component {\r\n    state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        balance: \"\"\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newClient = this.state;\r\n        const { firestore, history } = this.props;\r\n        if(newClient.balance === \"\") {\r\n            newClient.balance = 0;\r\n        }\r\n\r\n        firestore.add({ collection: \"clients\" }, newClient).then(() => \r\n        history.push(\"/\"));\r\n    }\r\n\r\n    render() {\r\n        const {disableBalanceOnAdd} = this.props.settings\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Link to=\"/\" className=\"btn btn-link\">\r\n                           <i className=\"fas fa-arrow-circle-left\"></i> Back To Dashboard\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">Add Client</div>\r\n                    <div className=\"card-body\">\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                name=\"firstName\"\r\n                                minLength=\"2\"\r\n                                required \r\n                                onChange={this.onChange}\r\n                                autoFocus\r\n                                value={this.state.firstName}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                name=\"lastName\"\r\n                                minLength=\"2\"\r\n                                required\r\n                                onChange={this.onChange}\r\n                                value={this.state.lastName}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <input \r\n                                type=\"type\" \r\n                                className=\"form-control\"\r\n                                name=\"email\"\r\n                                minLength=\"2\" \r\n                                required\r\n                                onChange={this.onChange}\r\n                                value={this.state.email}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"phone\">Phone</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                name=\"phone\"\r\n                                minLength=\"10\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.phone}/>\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"balance\">Balance</label>\r\n                                <input \r\n                                type=\"text\" \r\n                                className=\"form-control\"\r\n                                name=\"balance\"\r\n                                onChange={this.onChange}\r\n                                value={this.state.balance}\r\n                                disabled={disableBalanceOnAdd}\r\n                                />\r\n                            </div>\r\n\r\n                            <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\"></input>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAddClient.propType = {\r\n    firestore: PropTypes.object.isRequired,\r\n    settings: PropTypes.object.isRequired \r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(), connect((state, porps) => ({\r\n        settings: state.settings\r\n    }))\r\n)(AddClient);","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport classnames from \"classnames\";\r\nimport Spinner from \"../layout/Spinner.js\";\r\n\r\nclass ClientDetails extends Component {\r\n    state = {\r\n        showBalanceUpdate: false,\r\n        balanceUpdateAmount: null\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value});\r\n    \r\n\r\n    // Update balance\r\n    balanceSubmit = e => {\r\n        e.preventDefault();\r\n        const { client, firestore } = this.props;\r\n        const { balanceUpdateAmount } = this.state;\r\n\r\n        const clientUpdate = {\r\n            balance: balanceUpdateAmount\r\n        }\r\n\r\n        // Update in firestore\r\n        firestore.update({collection: \"clients\", doc: client.id}, clientUpdate)\r\n        console.log(this.state.balanceUpdateAmount)\r\n    }\r\n\r\n    // Delete client\r\n    Delete = () => {\r\n        const {client, firestore, history} = this.props;\r\n        firestore.delete({collection: \"clients\", doc: client.id}).then(history.push(\"/\"))\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props;\r\n        const { showBalanceUpdate, balanceUpdateAmount } = this.state;\r\n\r\n        let balanceForm = \"\";\r\n        // If balance form show display\r\n        if (showBalanceUpdate) {\r\n            balanceForm = (\r\n                <form onSubmit={this.balanceSubmit}>\r\n                    <div className=\"input-group\">\r\n                        <input \r\n                        type=\"number\"\r\n                        step=\"0.01\"\r\n                        min=\"0\"\r\n                        className=\"form-control\"\r\n                        name=\"balanceUpdateAmount\"\r\n                        placeholder=\"Add New Balance\"\r\n                        value={balanceUpdateAmount}\r\n                        onChange={this.onChange}\r\n                        />\r\n                        <div className=\"input-group-append\">\r\n                            <input type=\"submit\" value=\"Update\" className=\"btn btn-outline-dark\"></input>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            )\r\n        } else {\r\n            balanceForm = null;\r\n        }\r\n\r\n        if (client) {\r\n            return (\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Link to=\"/\" className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\"></i> Back To Dashboard\r\n                        </Link>\r\n                        </div>\r\n                        <div className=\"col-md-6\">\r\n                            <div className=\"btn-group float-right\">\r\n                                <Link to={`/client/edit/${client.id}`} className=\"btn btn-purple\">\r\n                                    Edit\r\n                                </Link>\r\n                                <button onClick={this.Delete} className=\"btn btn-blue\">\r\n                                    Delete\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <hr />\r\n                    <div className=\"card\">\r\n                        <h3 className=\"card-header bg-primary text-white pl-3\">\r\n                            {client.firstName} {client.lastName}\r\n                        </h3>\r\n                        <div className=\"card-body\">\r\n                            <div className=\"row\">\r\n                                <div className=\"col-md-8 col-sm-6\">\r\n                                    <h4>\r\n                                        Client ID:{\" \"}\r\n                                        <span className=\"text-secondary\">{client.id}</span> </h4>\r\n                                </div>\r\n                                <div className=\"col-md-3 col-sm-6\">\r\n                                    <h3 className=\"pull-right\">\r\n                                        Balance: <span className={classnames({\r\n                                            \"text-danger\": client.balance > 0,\r\n                                            \"text-success\": client.balance === \"0\" || client.balance === 0\r\n                                        })}>${parseFloat(client.balance).toFixed(2)}</span>\r\n                                        <small>\r\n                                            <a href=\"#!\" onClick={() => this.setState({showBalanceUpdate:\r\n                                            !this.state.showBalanceUpdate})} style={{cursor: \"pointer\"}}>\r\n                                            <i className=\"fas fa-pencil-alt pl-2 text-secondary\"></i>\r\n                                            </a>\r\n                                        </small>\r\n                                    </h3>\r\n                                    {balanceForm}\r\n                                </div>\r\n                            </div>\r\n                            <hr/>\r\n                            <ul className=\"list-group\">\r\n                                <li className=\"list-group-item\">Contact Email: {client.email}</li>\r\n                                <li className=\"list-group-item\">Contact Phone: {client.phone}</li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nClientDetails.propTypes = {\r\n    firestore: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: \"clients\", storeAs: \"client\", doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered } }, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(ClientDetails);","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firestoreConnect } from \"react-redux-firebase\";\r\nimport Spinner from \"../layout/Spinner.js\";\r\nvar count = 0;\r\n\r\nclass EditClient extends Component {\r\n    state = {};\r\n    onChange = (e) => this.setState({ ...this.state, [e.target.name]: e.target.value });\r\n    initState = (e) => this.setState({ e });\r\n    // Update client\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const updateClient = this.state;\r\n        const { client, firestore, history } = this.props;\r\n        if (client.balance === \"\") {\r\n            updateClient.balance = 0;\r\n        }\r\n\r\n        firestore.update({ collection: \"clients\", doc: client.id }, updateClient).then(() =>\r\n            history.push(`/client/${client.id}`));\r\n    }\r\n\r\n    render() {\r\n        const { client } = this.props;\r\n        const { disableBalanceOnEdit } = this.props.settings\r\n\r\n        if (client) {\r\n            if (count === 0) {\r\n                this.initState(client)\r\n                count++\r\n            }\r\n            return (\r\n                <div>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-md-6\">\r\n                            <Link to={`/client/${client.id}`} className=\"btn btn-link\">\r\n                                <i className=\"fas fa-arrow-circle-left\"></i> Back To Client Details\r\n                        </Link>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header\">Edit Client</div>\r\n                        <div className=\"card-body\">\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstName\">First Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"firstName\"\r\n                                        minLength=\"2\"\r\n                                        required\r\n                                        onChange={this.onChange}\r\n                                        autoFocus\r\n                                        defaultValue={client.firstName}></input>\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastName\">Last Name</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"lastName\"\r\n                                        minLength=\"2\"\r\n                                        required\r\n                                        onChange={this.onChange}\r\n                                        defaultValue={client.lastName} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input\r\n                                        type=\"type\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        minLength=\"2\"\r\n                                        required\r\n                                        onChange={this.onChange}\r\n                                        defaultValue={client.email} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"phone\">Phone</label>\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        className=\"form-control\"\r\n                                        name=\"phone\"\r\n                                        minLength=\"10\"\r\n                                        onChange={this.onChange}\r\n                                        defaultValue={client.phone} />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"balance\">Balance</label>\r\n                                    <input\r\n                                        type=\"number\"\r\n                                        step=\"0.01\"\r\n                                        min=\"0\"\r\n                                        className=\"form-control\"\r\n                                        name=\"balance\"\r\n                                        onChange={this.onChange}\r\n                                        defaultValue={client.balance}\r\n                                        disabled={disableBalanceOnEdit}\r\n                                    />\r\n                                </div>\r\n\r\n                                <input type=\"submit\" value=\"Submit\" className=\"btn btn-primary btn-block\"></input>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return <Spinner />\r\n        }\r\n    }\r\n}\r\n\r\nEditClient.propTypes = {\r\n    firestore: PropTypes.object.isRequired,\r\n    settings: PropTypes.object.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firestoreConnect(props => [\r\n        { collection: \"clients\", storeAs: \"client\", doc: props.match.params.id }\r\n    ]),\r\n    connect(({ firestore: { ordered }, settings }, props) => ({\r\n        client: ordered.client && ordered.client[0],\r\n        settings\r\n    }))\r\n)(EditClient);","import { NOTIFY_USER } from \"./types\";\r\n\r\nexport const notifyUser = (message, messageType) => {\r\n    return {\r\n            type: NOTIFY_USER,\r\n            message,\r\n            messageType\r\n     };\r\n};\r\n","import React from 'react';\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Alert = (props) => {\r\n    const { message, messageType } = props\r\n    return (\r\n        <div className={classnames(\"alert\", {\r\n            'alert-success': messageType === \"success\",\r\n            \"alert-danger\": messageType === \"error\"\r\n        })}>\r\n            {message}\r\n        </div>\r\n    );\r\n};\r\n\r\nAlert.propTypes = {\r\n    message: PropTypes.string.isRequired,\r\n    messageType: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Alert;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { notifyUser } from \"../../actions/notifyActions.js\";\r\nimport Alert from \"../layout/Alert.js\"\r\n\r\nclass Login extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    onChange = e => this.setState({[e.target.name]: e.target.value})\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { firebase, notifyUser } = this.props;\r\n        const {email, password} = this.state;\r\n        firebase.login({\r\n            email,\r\n            password\r\n        }).catch(err => notifyUser(\"Invalid Login Credentials\", \"error\"));\r\n    }\r\n\r\n    render() {\r\n        const { message, messageType } = this.props.notify;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {message ? (\r\n                                <Alert \r\n                                message={message}\r\n                                messageType={messageType}\r\n                                />\r\n                            ) : null}\r\n                            <h1 className=\"text-center pb-4 pt-3\">\r\n                                <span className=\"text-primary\">\r\n                                    <i className=\"fas fa-lock pr-2\"></i>\r\n                                    Login\r\n                                </span>\r\n                            </h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input \r\n                                    type=\"email\" \r\n                                    className=\"form-control\"\r\n                                    name=\"email\"\r\n                                    required\r\n                                    value={this.state.email}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input \r\n                                    type=\"password\" \r\n                                    className=\"form-control\"\r\n                                    name=\"password\"\r\n                                    required\r\n                                    value={this.state.password}\r\n                                    onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Login\" className=\"btn-primary btn-block py-1\"></input>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    firebase: PropTypes.object.isRequired,\r\n    notify: PropTypes.object.isRequired,\r\n    notifyUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firebaseConnect(),\r\n    connect((state, props) => ({\r\n        notify: state.notify\r\n    }), {notifyUser})\r\n)(Login);","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { compose } from \"redux\";\r\nimport { connect } from \"react-redux\";\r\nimport { firebaseConnect } from \"react-redux-firebase\";\r\nimport { notifyUser } from \"../../actions/notifyActions.js\";\r\nimport Alert from \"../layout/Alert.js\"\r\n\r\nclass Register extends Component {\r\n    state = {\r\n        email: \"\",\r\n        password: \"\",\r\n        confpass: \"\"\r\n    }\r\n\r\n    componentWillMount() {\r\n        const { allowRegistration } = this.props.settings;\r\n\r\n        if (!allowRegistration) {\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const { firebase, notifyUser } = this.props;\r\n        const { email, password, confpass } = this.state;\r\n        if (password === confpass) {\r\n            firebase.createUser({\r\n                email,\r\n                password\r\n            }).catch(err => notifyUser(\"User already exists\", \"error\"));\r\n        } else {\r\n\r\n            notifyUser(\"Passwords don't match\", \"error\")\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const { message, messageType } = this.props.notify;\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 mx-auto\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-body\">\r\n                            {message ? (\r\n                                <Alert\r\n                                    message={message}\r\n                                    messageType={messageType}\r\n                                />\r\n                            ) : null}\r\n                            <h1 className=\"text-center pb-4 pt-3\">\r\n                                <span className=\"text-primary\">\r\n                                    <i className=\"fas fa-lock pr-2\"></i>\r\n                                    Register\r\n                                </span>\r\n                            </h1>\r\n                            <form onSubmit={this.onSubmit}>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\">Email</label>\r\n                                    <input\r\n                                        type=\"email\"\r\n                                        className=\"form-control\"\r\n                                        name=\"email\"\r\n                                        required\r\n                                        value={this.state.email}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"password\"\r\n                                        required\r\n                                        value={this.state.password}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"password\">Confirm Password</label>\r\n                                    <input\r\n                                        type=\"password\"\r\n                                        className=\"form-control\"\r\n                                        name=\"confpass\"\r\n                                        required\r\n                                        value={this.state.confpass}\r\n                                        onChange={this.onChange}\r\n                                    />\r\n                                </div>\r\n                                <input type=\"submit\" value=\"Register\" className=\"btn-primary btn-block py-1\"></input>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    firebase: PropTypes.object.isRequired,\r\n    notify: PropTypes.object.isRequired,\r\n    notifyUser: PropTypes.func.isRequired\r\n}\r\n\r\nexport default compose(\r\n    firebaseConnect(),\r\n    connect((state, props) => ({\r\n        notify: state.notify,\r\n        settings: state.settings\r\n    }), { notifyUser })\r\n)(Register);","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { setAllowRegistration, setDisableBalanceOnAdd, setDisableBalanceOnEdit } from \"../../actions/settingsActions.js\";\r\n\r\nclass Settings extends Component {\r\n    disableBalanceOnAddChange = () => {\r\n        const { setDisableBalanceOnAdd } = this.props;\r\n        setDisableBalanceOnAdd();\r\n    }\r\n\r\n    disableBalanceOnEditChange = () => {\r\n        const { setDisableBalanceOnEdit } = this.props;\r\n        setDisableBalanceOnEdit();\r\n    }\r\n\r\n    allowRegistrationChange = () => {\r\n        const { setAllowRegistration } = this.props;\r\n        setAllowRegistration();\r\n    }\r\n\r\n    render() {\r\n        const { disableBalanceOnAdd, disableBalanceOnEdit, allowRegistration } = this.props.settings;\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                        <Link to=\"/\" className=\"btn btn-link\">\r\n                            <i className=\"fas fa-arrow-circle-left pr-2\"></i>Back To Dashboard\r\n                    </Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card\">\r\n                    <div className=\"card-header\">Edit Settings</div>\r\n                    <div className=\"card-body\">\r\n                        <form>\r\n                            <div className=\"form-group\">\r\n                                <label>Allow Registration</label>{\" \"}\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"allowRegistration\"\r\n                                    checked={!!allowRegistration}\r\n                                    onChange={this.allowRegistrationChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Disable Balance On Add</label>{\" \"}\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"disableBalanceOnAdd\"\r\n                                    checked={!!disableBalanceOnAdd}\r\n                                    onChange={this.disableBalanceOnAddChange}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"form-group\">\r\n                                <label>Disable Balance On Edit</label>{\" \"}\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"disableBalanceOnEdit\"\r\n                                    checked={!!disableBalanceOnEdit}\r\n                                    onChange={this.disableBalanceOnEditChange}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nSettings.propTypes = {\r\n    settings: PropTypes.object.isRequired,\r\n    setDisableBalanceOnEdit: PropTypes.func.isRequired,\r\n    setDisableBalanceOnAdd: PropTypes.func.isRequired,\r\n    setAllowRegistration: PropTypes.func.isRequired\r\n}\r\n\r\nexport default connect((state, props) => ({\r\n    auth: state.firebase.auth,\r\n    settings: state.settings\r\n}),\r\n    { setAllowRegistration, setDisableBalanceOnAdd, setDisableBalanceOnEdit }\r\n)(Settings);","import { DISABLE_BALANCE_ON_ADD, DISABLE_BALANCE_ON_EDIT, ALLOW_REGISTRATION } from \"./types.js\";\r\n\r\n\r\nexport const setDisableBalanceOnAdd = () => {\r\n    // Get settings from localStorage\r\n    const settings = JSON.parse(localStorage.getItem('settings'));\r\n\r\n    // Toggle\r\n    settings.disableBalanceOnAdd = !settings.disableBalanceOnAdd\r\n\r\n    // Set back to local \\Storage\r\n    localStorage.setItem('settings', JSON.stringify(settings))\r\n    return {\r\n        type: DISABLE_BALANCE_ON_ADD,\r\n        payload: settings.disableBalanceOnAdd\r\n    }\r\n}\r\n\r\nexport const setDisableBalanceOnEdit = () => {\r\n    // Get settings from localStorage\r\n    const settings = JSON.parse(localStorage.getItem('settings'));\r\n\r\n    // Toggle\r\n    settings.disableBalanceOnEdit = !settings.disableBalanceOnEdit\r\n\r\n    // Set back to local \\Storage\r\n    localStorage.setItem('settings', JSON.stringify(settings))\r\n    return {\r\n        type: DISABLE_BALANCE_ON_EDIT,\r\n        payload: settings.disableBalanceOnEdit\r\n    }\r\n}\r\n\r\nexport const setAllowRegistration = () => {\r\n    // Get settings from localStorage\r\n    const settings = JSON.parse(localStorage.getItem('settings'));\r\n    \r\n\r\n    // Toggle\r\n    settings.allowRegistration = !settings.allowRegistration\r\n\r\n    // Set back to local \\Storage\r\n    localStorage.setItem('settings', JSON.stringify(settings))\r\n    return {\r\n        type: ALLOW_REGISTRATION,\r\n        payload: settings.allowRegistration\r\n    }\r\n}","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { UserIsAuthenticated, UserIsNotAuthenticated } from \"./helpers/auth\"\n\nimport store from \"./store.js\";\nimport AppNavbar from \"./components/layout/AppNavbar.js\";\nimport Dashboard from \"./components/layout/Dashboard.js\";\nimport AddClient from \"./components/clients/AddClient.js\";\nimport ClientDetails from \"./components/clients/ClientDetails.js\";\nimport EditClient from \"./components/clients/EditClient.js\";\nimport Login from \"./components/auth/Login.js\";\nimport Register from \"./components/auth/Register.js\";\nimport Settings from \"./components/settings/Settings.js\"\n\nimport \"./App.css\"\n\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <AppNavbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={UserIsAuthenticated(Dashboard)} />\n                <Route exact path=\"/client/add\" component={UserIsAuthenticated(AddClient)} />\n                <Route exact path=\"/client/:id\" component={UserIsAuthenticated(ClientDetails)} />\n                <Route exact path=\"/client/edit/:id\" component={UserIsAuthenticated(EditClient)} />\n                <Route exact path=\"/login\" component={UserIsNotAuthenticated(Login)} />\n                <Route exact path=\"/settings\" component={UserIsAuthenticated(Settings)} />\n                <Route exact path=\"/register\" component={UserIsNotAuthenticated(Register)} />\n              </Switch>\n            </div>\n            </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}